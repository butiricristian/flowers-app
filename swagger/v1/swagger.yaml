---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/orders":
    get:
      summary: list orders
      tags:
      - Orders
      security:
      - bearer_auth: []
      parameters:
      - name: status
        in: query
        description: Filter by order status
        schema:
          type: string
          enum:
          - pending
          - delivered
          - canceled
      responses:
        '200':
          description: successful
    post:
      summary: create order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Allows the user to create an order.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  schema:
                    "$ref": "#/components/schemas/order"
            examples:
              order:
                summary: An order example
                value:
                  order:
                    creator_id: 2
                    status: pending
                    address: 5278 Davina Port, New Beatrice, VT 92626
                    flowers_orders_attributes:
                    - flower_id: 1
                      quantity: 1
                    - flower_id: 2
                      quantity: 2
  "/api/v1/orders/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    patch:
      summary: update order
      tags:
      - Orders
      security:
      - bearer_auth: []
      description: Allows the user to update an order. Only the creator of the order
        can update it.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  schema:
                    "$ref": "#/components/schemas/order"
            examples:
              order:
                summary: An order example
                value:
                  order:
                    status: delivered
                    flowers_orders_attributes:
                    - flower_id: 1
                      quantity: 2
  "/users":
    post:
      summary: create registration
      tags:
      - Registration
      description: Allows a user to sign up
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  schema:
                    "$ref": "#/components/schemas/user_form"
            examples:
              user_sign_up:
                summary: A user sign up example
                value:
                  user:
                    email: butiri.cristian@gmail.com
                    password: admin1234
    patch:
      summary: update registration
      tags:
      - Registration
      responses:
        '200':
          description: successful
    put:
      summary: update registration
      tags:
      - Registration
      responses:
        '200':
          description: successful
    delete:
      summary: delete registration
      tags:
      - Registration
      responses:
        '200':
          description: successful
  "/users/sign_in":
    post:
      summary: create session
      tags:
      - Login
      description: Allows a user to sign into their account
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
              required:
              - email
              - password
            examples:
              user_sign_in:
                summary: A user sign in example
                value:
                  user:
                    email: butiri.cristian@gmail.com
                    password: admin1234
  "/users/sign_out":
    delete:
      summary: delete session
      tags:
      - Login
      description: Allows a user to sign out of their account
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    user_form:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
      required:
      - email
      - password
    user:
      allOf:
      - "$ref": "#/components/schemas/user_form"
      - type: object
        properties:
          id:
            type: string
    flower:
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
    order:
      type: object
      properties:
        creator_id:
          type: integer
        address:
          type: string
        status:
          type: string
          enum:
          - pending
          - delivered
          - canceled
